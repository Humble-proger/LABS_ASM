.386
.MODEL FLAT, STDCALL
OPTION CASEMAP: NONE
EXTERN  GetStdHandle@4: PROC
EXTERN  WriteConsoleA@20: PROC
EXTERN  CharToOemA@8: PROC
EXTERN  ReadConsoleA@20: PROC
EXTERN  ExitProcess@4: PROC
EXTERN  lstrlenA@4: PROC

.DATA
STRN1 db "Введите строчку : ",13,10,0
STRN2 db "Введите длину подстроки: ", 13, 10, 0;
STRN3 db "Введите номер позиции: ", 13, 10, 0
DERR db "ERROR: Данные, введены некорректно.", 13, 10, 0;
DIN DD ?

DOUT DD ?
BUF  DB 200 dup (?)
NEW_STRING DB 200 dup (?)
LENS DD ?
LENS_SUBSTRING DD ?
START_STRING DD ?


.CODE
CONVERTCHARTOINT PROC
MOV ESI, OFFSET BUF
MOV ECX, LENS
XOR EBX, EBX
MOV EAX, 0
MOV BL, [ESI];
CMP BL, '-'
JNE NO_Otr
JE Otr
NO_Otr: 
	CONVERT:
		MOV EDX, 10
		MOV BL, [ESI];
		SUB BL, '0';
		MUL EDX;
		ADD EAX, EBX
		INC ESI;
	LOOP CONVERT;
	jmp end_proces
Otr: 
	INC ESI;
	CONVERT_1:
		MOV EDX, 10
		MOV BL, [ESI];
		SUB BL, '0';
		IMUL EDX;
		ADD EAX, EBX
		INC ESI;
	LOOP CONVERT_1;
	MOV EDX, -1
	IMUL EDX
end_proces:
	ret
CONVERTCHARTOINT ENDP

CHECKNUM PROC
MOV ESI, OFFSET BUF
MOV BL, [ESI];
CMP BL, '-'
JE Error
JNE Not_err
Error:
	PUSH OFFSET DERR
	CALL lstrlenA@4
	PUSH 0
	PUSH OFFSET LENS
	PUSH EAX
	PUSH OFFSET DERR
	PUSH DOUT
	CALL WriteConsoleA@20
	PUSH 1
	CALL ExitProcess@4
Not_err:
	ret
CHECKNUM ENDP
CHECKSHAPE PROC
MOV EAX, LENS_SUBSTRING
ADD EAX, START_STRING
CMP LENS, EAX
JAE Correct
JB Error
Error:
	PUSH OFFSET DERR
	CALL lstrlenA@4
	PUSH 0
	PUSH OFFSET LENS
	PUSH EAX
	PUSH OFFSET DERR
	PUSH DOUT
	CALL WriteConsoleA@20
	PUSH 1
	CALL ExitProcess@4
Correct:
	ret
CHECKSHAPE ENDP

SUBSTRING PROC
CLD
LEA ESI, BUF
LEA EDI, NEW_STRING
ADD ESI, START_STRING
MOV ECX, LENS_SUBSTRING
REP MOVSB
ret
SUBSTRING ENDP


MAIN PROC
MOV  EAX, OFFSET STRN1
PUSH EAX
PUSH EAX
CALL CharToOemA@8;
MOV  EAX, OFFSET STRN2
PUSH EAX 
PUSH EAX
CALL CharToOemA@8
MOV  EAX, OFFSET STRN3
PUSH EAX 
PUSH EAX
CALL CharToOemA@8
MOV  EAX, OFFSET DERR
PUSH EAX 
PUSH EAX
CALL CharToOemA@8
PUSH -10
CALL GetStdHandle@4
MOV DIN, EAX
PUSH -11
CALL GetStdHandle@4
MOV DOUT, EAX 
PUSH OFFSET STRN2
CALL lstrlenA@4
PUSH 0
PUSH OFFSET LENS
PUSH EAX
PUSH OFFSET STRN2
PUSH DOUT
CALL WriteConsoleA@20
PUSH 0
PUSH OFFSET LENS
PUSH 200
PUSH OFFSET BUF
PUSH DIN
CALL ReadConsoleA@20
SUB LENS, 2;
CALL CHECKNUM;
CALL CONVERTCHARTOINT;
MOV LENS_SUBSTRING, EAX
PUSH OFFSET STRN3
CALL lstrlenA@4
PUSH 0
PUSH OFFSET LENS
PUSH EAX
PUSH OFFSET STRN3
PUSH DOUT
CALL WriteConsoleA@20
PUSH 0
PUSH OFFSET LENS
PUSH 200
PUSH OFFSET BUF
PUSH DIN
CALL ReadConsoleA@20 
SUB LENS, 2;
CALL CHECKNUM;
CALL CONVERTCHARTOINT;
MOV START_STRING, EAX
PUSH OFFSET STRN1
CALL lstrlenA@4
PUSH 0
PUSH OFFSET LENS
PUSH EAX
PUSH OFFSET STRN1
PUSH DOUT
CALL WriteConsoleA@20
PUSH 0
PUSH OFFSET LENS
PUSH 200
PUSH OFFSET BUF
PUSH DIN
CALL ReadConsoleA@20
SUB LENS, 2
CALL CHECKSHAPE
CALL SUBSTRING
PUSH 0
PUSH OFFSET LENS
PUSH LENS_SUBSTRING
PUSH OFFSET NEW_STRING
PUSH DOUT
CALL WriteConsoleA@20
PUSH 0
CALL ExitProcess@4
MAIN ENDP
END MAIN;
